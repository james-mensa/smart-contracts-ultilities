/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  JMCoin,
  JMCoinInterface,
} from "../../../contracts/Token.sol/JMCoin";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cd438038062001cd4833981810160405281019062000037919062000420565b6040518060400160405280600a81526020017f4a414d455320436f696e000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f4a436f696e0000000000000000000000000000000000000000000000000000008152508160039081620000b49190620006c2565b508060049081620000c69190620006c2565b505050620000db33826200012360201b60201c565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620008e0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001985760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200018f9190620007ee565b60405180910390fd5b620001ac60008383620001b060201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000206578060026000828254620001f991906200083a565b92505081905550620002dc565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000295578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200028c9392919062000886565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000327578060026000828254039250508190555062000374565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003d39190620008c3565b60405180910390a3505050565b600080fd5b6000819050919050565b620003fa81620003e5565b81146200040657600080fd5b50565b6000815190506200041a81620003ef565b92915050565b600060208284031215620004395762000438620003e0565b5b6000620004498482850162000409565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004d457607f821691505b602082108103620004ea57620004e96200048c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000515565b62000560868362000515565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005a36200059d6200059784620003e5565b62000578565b620003e5565b9050919050565b6000819050919050565b620005bf8362000582565b620005d7620005ce82620005aa565b84845462000522565b825550505050565b600090565b620005ee620005df565b620005fb818484620005b4565b505050565b5b81811015620006235762000617600082620005e4565b60018101905062000601565b5050565b601f82111562000672576200063c81620004f0565b620006478462000505565b8101602085101562000657578190505b6200066f620006668562000505565b83018262000600565b50505b505050565b600082821c905092915050565b6000620006976000198460080262000677565b1980831691505092915050565b6000620006b2838362000684565b9150826002028217905092915050565b620006cd8262000452565b67ffffffffffffffff811115620006e957620006e86200045d565b5b620006f58254620004bb565b6200070282828562000627565b600060209050601f8311600181146200073a576000841562000725578287015190505b620007318582620006a4565b865550620007a1565b601f1984166200074a86620004f0565b60005b8281101562000774578489015182556001820191506020850194506020810190506200074d565b8683101562000794578489015162000790601f89168262000684565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007d682620007a9565b9050919050565b620007e881620007c9565b82525050565b6000602082019050620008056000830184620007dd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200084782620003e5565b91506200085483620003e5565b92508282019050808211156200086f576200086e6200080b565b5b92915050565b6200088081620003e5565b82525050565b60006060820190506200089d6000830186620007dd565b620008ac602083018562000875565b620008bb604083018462000875565b949350505050565b6000602082019050620008da600083018462000875565b92915050565b6113e480620008f06000396000f3fe6080604052600436106100c65760003560e01c806340c10f191161007f57806395d89b411161005957806395d89b411461027a578063a9059cbb146102a5578063d0e30db0146102e2578063dd62ed3e146102ec576100cd565b806340c10f19146101e957806370a08231146102125780638da5cb5b1461024f576100cd565b806306fdde03146100d2578063095ea7b3146100fd57806318160ddd1461013a57806323b872dd14610165578063313ce567146101a25780633e58c58c146101cd576100cd565b366100cd57005b600080fd5b3480156100de57600080fd5b506100e7610329565b6040516100f49190610e1d565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f9190610ed8565b6103bb565b6040516101319190610f33565b60405180910390f35b34801561014657600080fd5b5061014f6103de565b60405161015c9190610f5d565b60405180910390f35b34801561017157600080fd5b5061018c60048036038101906101879190610f78565b6103e8565b6040516101999190610f33565b60405180910390f35b3480156101ae57600080fd5b506101b7610417565b6040516101c49190610fe7565b60405180910390f35b6101e760048036038101906101e29190611040565b610420565b005b3480156101f557600080fd5b50610210600480360381019061020b9190610ed8565b6104d0565b005b34801561021e57600080fd5b506102396004803603810190610234919061106d565b61056e565b6040516102469190610f5d565b60405180910390f35b34801561025b57600080fd5b506102646105b6565b60405161027191906110a9565b60405180910390f35b34801561028657600080fd5b5061028f6105dc565b60405161029c9190610e1d565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c79190610ed8565b61066e565b6040516102d99190610f33565b60405180910390f35b6102ea610691565b005b3480156102f857600080fd5b50610313600480360381019061030e91906110c4565b6106e6565b6040516103209190610f5d565b60405180910390f35b60606003805461033890611133565b80601f016020809104026020016040519081016040528092919081815260200182805461036490611133565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b5050505050905090565b6000806103c661076d565b90506103d3818585610775565b600191505092915050565b6000600254905090565b6000806103f361076d565b9050610400858285610787565b61040b85858561081b565b60019150509392505050565b60006012905090565b60008173ffffffffffffffffffffffffffffffffffffffff163460405161044690611195565b60006040518083038185875af1925050503d8060008114610483576040519150601f19603f3d011682016040523d82523d6000602084013e610488565b606091505b50509050806104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c3906111f6565b60405180910390fd5b5050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790611262565b60405180910390fd5b61056a828261090f565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600480546105eb90611133565b80601f016020809104026020016040519081016040528092919081815260200182805461061790611133565b80156106645780601f1061063957610100808354040283529160200191610664565b820191906000526020600020905b81548152906001019060200180831161064757829003601f168201915b5050505050905090565b60008061067961076d565b905061068681858561081b565b600191505092915050565b600034116106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb906112f4565b60405180910390fd5b60003490506106e3338261090f565b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6107828383836001610991565b505050565b600061079384846106e6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108155781811015610805578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107fc93929190611314565b60405180910390fd5b61081484848484036000610991565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361088d5760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161088491906110a9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ff5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108f691906110a9565b60405180910390fd5b61090a838383610b68565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109815760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161097891906110a9565b60405180910390fd5b61098d60008383610b68565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a035760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109fa91906110a9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a755760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a6c91906110a9565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b62578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b599190610f5d565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bba578060026000828254610bae919061137a565b92505081905550610c8d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c46578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c3d93929190611314565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cd65780600260008282540392505081905550610d23565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d809190610f5d565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dc7578082015181840152602081019050610dac565b60008484015250505050565b6000601f19601f8301169050919050565b6000610def82610d8d565b610df98185610d98565b9350610e09818560208601610da9565b610e1281610dd3565b840191505092915050565b60006020820190508181036000830152610e378184610de4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6f82610e44565b9050919050565b610e7f81610e64565b8114610e8a57600080fd5b50565b600081359050610e9c81610e76565b92915050565b6000819050919050565b610eb581610ea2565b8114610ec057600080fd5b50565b600081359050610ed281610eac565b92915050565b60008060408385031215610eef57610eee610e3f565b5b6000610efd85828601610e8d565b9250506020610f0e85828601610ec3565b9150509250929050565b60008115159050919050565b610f2d81610f18565b82525050565b6000602082019050610f486000830184610f24565b92915050565b610f5781610ea2565b82525050565b6000602082019050610f726000830184610f4e565b92915050565b600080600060608486031215610f9157610f90610e3f565b5b6000610f9f86828701610e8d565b9350506020610fb086828701610e8d565b9250506040610fc186828701610ec3565b9150509250925092565b600060ff82169050919050565b610fe181610fcb565b82525050565b6000602082019050610ffc6000830184610fd8565b92915050565b600061100d82610e44565b9050919050565b61101d81611002565b811461102857600080fd5b50565b60008135905061103a81611014565b92915050565b60006020828403121561105657611055610e3f565b5b60006110648482850161102b565b91505092915050565b60006020828403121561108357611082610e3f565b5b600061109184828501610e8d565b91505092915050565b6110a381610e64565b82525050565b60006020820190506110be600083018461109a565b92915050565b600080604083850312156110db576110da610e3f565b5b60006110e985828601610e8d565b92505060206110fa85828601610e8d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061114b57607f821691505b60208210810361115e5761115d611104565b5b50919050565b600081905092915050565b50565b600061117f600083611164565b915061118a8261116f565b600082019050919050565b60006111a082611172565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b60006111e0601483610d98565b91506111eb826111aa565b602082019050919050565b6000602082019050818103600083015261120f816111d3565b9050919050565b7f4f6e6c79206f776e65722063616e206d696e7400000000000000000000000000600082015250565b600061124c601383610d98565b915061125782611216565b602082019050919050565b6000602082019050818103600083015261127b8161123f565b9050919050565b7f56616c75652073656e74206d7573742062652067726561746572207468616e2060008201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b60006112de602183610d98565b91506112e982611282565b604082019050919050565b6000602082019050818103600083015261130d816112d1565b9050919050565b6000606082019050611329600083018661109a565b6113366020830185610f4e565b6113436040830184610f4e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061138582610ea2565b915061139083610ea2565b92508282019050808211156113a8576113a761134b565b5b9291505056fea264697066735822122051e6dcc43cbbd88f36497917723466a8574aa1e2587b059463c889e0da59cdcc64736f6c63430008140033";

type JMCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JMCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JMCoin__factory extends ContractFactory {
  constructor(...args: JMCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JMCoin> {
    return super.deploy(initialSupply, overrides || {}) as Promise<JMCoin>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): JMCoin {
    return super.attach(address) as JMCoin;
  }
  override connect(signer: Signer): JMCoin__factory {
    return super.connect(signer) as JMCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JMCoinInterface {
    return new utils.Interface(_abi) as JMCoinInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): JMCoin {
    return new Contract(address, _abi, signerOrProvider) as JMCoin;
  }
}
