/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MensahCoin,
  MensahCoinInterface,
} from "../../../contracts/Token.sol/MensahCoin";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ad038038062001ad0833981810160405281019062000037919062000420565b6040518060400160405280600a81526020017f4d656e736168436f696e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d434e00000000000000000000000000000000000000000000000000000000008152508160039081620000b49190620006c2565b508060049081620000c69190620006c2565b505050620000db33826200012360201b60201c565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620008e0565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001985760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200018f9190620007ee565b60405180910390fd5b620001ac60008383620001b060201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000206578060026000828254620001f991906200083a565b92505081905550620002dc565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000295578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200028c9392919062000886565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000327578060026000828254039250508190555062000374565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003d39190620008c3565b60405180910390a3505050565b600080fd5b6000819050919050565b620003fa81620003e5565b81146200040657600080fd5b50565b6000815190506200041a81620003ef565b92915050565b600060208284031215620004395762000438620003e0565b5b6000620004498482850162000409565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004d457607f821691505b602082108103620004ea57620004e96200048c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000515565b62000560868362000515565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005a36200059d6200059784620003e5565b62000578565b620003e5565b9050919050565b6000819050919050565b620005bf8362000582565b620005d7620005ce82620005aa565b84845462000522565b825550505050565b600090565b620005ee620005df565b620005fb818484620005b4565b505050565b5b81811015620006235762000617600082620005e4565b60018101905062000601565b5050565b601f82111562000672576200063c81620004f0565b620006478462000505565b8101602085101562000657578190505b6200066f620006668562000505565b83018262000600565b50505b505050565b600082821c905092915050565b6000620006976000198460080262000677565b1980831691505092915050565b6000620006b2838362000684565b9150826002028217905092915050565b620006cd8262000452565b67ffffffffffffffff811115620006e957620006e86200045d565b5b620006f58254620004bb565b6200070282828562000627565b600060209050601f8311600181146200073a576000841562000725578287015190505b620007318582620006a4565b865550620007a1565b601f1984166200074a86620004f0565b60005b8281101562000774578489015182556001820191506020850194506020810190506200074d565b8683101562000794578489015162000790601f89168262000684565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007d682620007a9565b9050919050565b620007e881620007c9565b82525050565b6000602082019050620008056000830184620007dd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200084782620003e5565b91506200085483620003e5565b92508282019050808211156200086f576200086e6200080b565b5b92915050565b6200088081620003e5565b82525050565b60006060820190506200089d6000830186620007dd565b620008ac602083018562000875565b620008bb604083018462000875565b949350505050565b6000602082019050620008da600083018462000875565b92915050565b6111e080620008f06000396000f3fe6080604052600436106100ab5760003560e01c806370a082311161006457806370a08231146101db5780638da5cb5b1461021857806395d89b4114610243578063a9059cbb1461026e578063d0e30db0146102ab578063dd62ed3e146102b5576100b2565b806306fdde03146100b7578063095ea7b3146100e257806318160ddd1461011f57806323b872dd1461014a578063313ce5671461018757806340c10f19146101b2576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc6102f2565b6040516100d99190610d36565b60405180910390f35b3480156100ee57600080fd5b5061010960048036038101906101049190610df1565b610384565b6040516101169190610e4c565b60405180910390f35b34801561012b57600080fd5b506101346103a7565b6040516101419190610e76565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c9190610e91565b6103b1565b60405161017e9190610e4c565b60405180910390f35b34801561019357600080fd5b5061019c6103e0565b6040516101a99190610f00565b60405180910390f35b3480156101be57600080fd5b506101d960048036038101906101d49190610df1565b6103e9565b005b3480156101e757600080fd5b5061020260048036038101906101fd9190610f1b565b610487565b60405161020f9190610e76565b60405180910390f35b34801561022457600080fd5b5061022d6104cf565b60405161023a9190610f57565b60405180910390f35b34801561024f57600080fd5b506102586104f5565b6040516102659190610d36565b60405180910390f35b34801561027a57600080fd5b5061029560048036038101906102909190610df1565b610587565b6040516102a29190610e4c565b60405180910390f35b6102b36105aa565b005b3480156102c157600080fd5b506102dc60048036038101906102d79190610f72565b6105ff565b6040516102e99190610e76565b60405180910390f35b60606003805461030190610fe1565b80601f016020809104026020016040519081016040528092919081815260200182805461032d90610fe1565b801561037a5780601f1061034f5761010080835404028352916020019161037a565b820191906000526020600020905b81548152906001019060200180831161035d57829003601f168201915b5050505050905090565b60008061038f610686565b905061039c81858561068e565b600191505092915050565b6000600254905090565b6000806103bc610686565b90506103c98582856106a0565b6103d4858585610734565b60019150509392505050565b60006012905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610479576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104709061105e565b60405180910390fd5b6104838282610828565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461050490610fe1565b80601f016020809104026020016040519081016040528092919081815260200182805461053090610fe1565b801561057d5780601f106105525761010080835404028352916020019161057d565b820191906000526020600020905b81548152906001019060200180831161056057829003601f168201915b5050505050905090565b600080610592610686565b905061059f818585610734565b600191505092915050565b600034116105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e4906110f0565b60405180910390fd5b60003490506105fc3382610828565b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61069b83838360016108aa565b505050565b60006106ac84846105ff565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461072e578181101561071e578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161071593929190611110565b60405180910390fd5b61072d848484840360006108aa565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107a65760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161079d9190610f57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108185760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161080f9190610f57565b60405180910390fd5b610823838383610a81565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361089a5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108919190610f57565b60405180910390fd5b6108a660008383610a81565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361091c5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109139190610f57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361098e5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016109859190610f57565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610a7b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a729190610e76565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ad3578060026000828254610ac79190611176565b92505081905550610ba6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b5f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610b5693929190611110565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bef5780600260008282540392505081905550610c3c565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c999190610e76565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ce0578082015181840152602081019050610cc5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d0882610ca6565b610d128185610cb1565b9350610d22818560208601610cc2565b610d2b81610cec565b840191505092915050565b60006020820190508181036000830152610d508184610cfd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8882610d5d565b9050919050565b610d9881610d7d565b8114610da357600080fd5b50565b600081359050610db581610d8f565b92915050565b6000819050919050565b610dce81610dbb565b8114610dd957600080fd5b50565b600081359050610deb81610dc5565b92915050565b60008060408385031215610e0857610e07610d58565b5b6000610e1685828601610da6565b9250506020610e2785828601610ddc565b9150509250929050565b60008115159050919050565b610e4681610e31565b82525050565b6000602082019050610e616000830184610e3d565b92915050565b610e7081610dbb565b82525050565b6000602082019050610e8b6000830184610e67565b92915050565b600080600060608486031215610eaa57610ea9610d58565b5b6000610eb886828701610da6565b9350506020610ec986828701610da6565b9250506040610eda86828701610ddc565b9150509250925092565b600060ff82169050919050565b610efa81610ee4565b82525050565b6000602082019050610f156000830184610ef1565b92915050565b600060208284031215610f3157610f30610d58565b5b6000610f3f84828501610da6565b91505092915050565b610f5181610d7d565b82525050565b6000602082019050610f6c6000830184610f48565b92915050565b60008060408385031215610f8957610f88610d58565b5b6000610f9785828601610da6565b9250506020610fa885828601610da6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ff957607f821691505b60208210810361100c5761100b610fb2565b5b50919050565b7f4f6e6c79206f776e65722063616e206d696e7400000000000000000000000000600082015250565b6000611048601383610cb1565b915061105382611012565b602082019050919050565b600060208201905081810360008301526110778161103b565b9050919050565b7f56616c75652073656e74206d7573742062652067726561746572207468616e2060008201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b60006110da602183610cb1565b91506110e58261107e565b604082019050919050565b60006020820190508181036000830152611109816110cd565b9050919050565b60006060820190506111256000830186610f48565b6111326020830185610e67565b61113f6040830184610e67565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061118182610dbb565b915061118c83610dbb565b92508282019050808211156111a4576111a3611147565b5b9291505056fea2646970667358221220110dba37b1742dcc54e2056e4278fbbe663eede3b24b5f5efd7920272d040abb64736f6c63430008140033";

type MensahCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MensahCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MensahCoin__factory extends ContractFactory {
  constructor(...args: MensahCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MensahCoin> {
    return super.deploy(initialSupply, overrides || {}) as Promise<MensahCoin>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): MensahCoin {
    return super.attach(address) as MensahCoin;
  }
  override connect(signer: Signer): MensahCoin__factory {
    return super.connect(signer) as MensahCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MensahCoinInterface {
    return new utils.Interface(_abi) as MensahCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MensahCoin {
    return new Contract(address, _abi, signerOrProvider) as MensahCoin;
  }
}
